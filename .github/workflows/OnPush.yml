# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

name: On Push
on:
  push:
jobs:
  pages:
    name: Build Github pages
    needs: [ build ]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Setup JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: gradle
      - name: Execute
        run: chmod +x ./gradlew
      - name: Build Javadocs
        run: ./gradlew javadoc
      - name: Clone project
        run: git clone -b gh_page https://github.com/EconToolBox/AccountInterface.git ./newPages
      - name: Setup email
        working-directory: ./newPages
        run: git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"
      - name: Set token
        working-directory: ./newPages
        run: git remote set-url origin https://AccountInterface:${{secrets.GITHUB_TOKEN}}@github.com/EconToolBox/AccountInterface.git
      - name: Setup user
        working-directory: ./newPages
        run: git config --global user.name "github-actions[bot]"
      - name: Remove current pages
        run: rm -r ./newPages/javadocs/Branch/${{github.ref}}
        id: remove
        continue-on-error: true
      - name: Create docs folder
        run: mkdir -p ./newPages/javadocs/Branch/${{github.ref}}
        continue-on-error: true
        if: always()
      - name: Copy new to location
        if: always()
        run: mv ./build/docs/javadoc/ ./newPages/javadocs/Branch/${{github.ref}}/
      - name: Add to git
        run: git add .
        if: always()
        working-directory: ./newPages
      - name: commit pages branch
        if: always()
        run: git commit -m "updated ${{github.ref}}"
        working-directory: ./newPages
      - name: push new branch
        if: always()
        run: git push
        working-directory: ./newPages
  build:
    name: Build and Test
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: gradle
      - name: Execute
        run: chmod +x ./gradlew
      - name: Build with Gradle
        run: ./gradlew build
      - name: Test with Maven
        run: ./gradlew clean test
