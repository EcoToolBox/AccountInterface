# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

name: Java CI with Maven
on:
  push:
    branches: [ "main" ]
jobs:
  pages:
    name: Build Github pages
    needs: [build]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Setup JDK 17
        uses: actions/setup-java@v3
        with: 
          java-version: '17'
          distribution: 'temurin'
          cache: maven
      - name: Build Javadocs
        run: mvn javadoc:javadoc
      - name: Clone project
        run: git clone -b gh_page https://github.com/EconToolBox/AccountInterface.git ./newPages
      - name: Setup email
        working-directory: ./newPages
        run: git --global user.email "Githubactions@AccountInterface.bot"
      - name: Setup user
        working-directory: ./newPages
        run: git --global user.name "Github Action Bot"
      - name: Remove current pages
        run: rm -r ./newPages/javadocs/Branch/${{github.base_ref}}
        id: remove
      - name: Copy new to location
        if: ${{failure() && steps.remove.conclusion == 'failure'}}
        run: mv ./target/site/apidocs/ ./newPages/javadocs/Branch/${{github.base_ref}}/
      - name: Add to git
        run: git add .
        if: ${{failure() && steps.remove.conclusion == 'failure'}}
        working-directory: ./newPages
      - name: commit pages branch
        if: ${{failure() && steps.remove.conclusion == 'failure'}}
        run: git commit -m "updated ${{github.base_ref}}"
        working-directory: ./newPages
      - name: push new branch
        if: ${{failure() && steps.remove.conclusion == 'failure'}}
        run: git push
        working-directory: ./newPages
  build:
    name: Build and Test
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven
      - name: Build with Maven
        run: mvn package
      - name: Test with Maven
        run: mvn clean test
